{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joao/Documents/_DEV/rocketseat/nlw/aulas/podcastrnext/src/pages/index.tsx\";\n// SPA (não usar quando as informações que serão obtidas com esta estratégia precisarem estar disponíveis assim que a página é exibida para o usuário; o Crawler não vai indexar isso) \n// SSR\n// SSG (utilizar quando deseja-se cacher a página no servidor- performance; ex.: 1 milhão de pessoas acessa a mesma página no mesmo dia => cachear site no servidor e por validade de 24 )\n// export default function Home() {\n//   useEffect( // SPA\n//     () => {\n//       fetch('http://localhost:3333/episodes')\n//         .then(response => response.json())\n//         .then(data => console.log(data))\n//     }, // o que fazer \n//     [] // quando; \"[]\" significa que a função vai ser executada assim que o componente for exibido em tela, uma única vez\n//   )\n//   return (\n//     <h1>Index</h1>\n//   )\n// }\nexport var __N_SSP = true;\nexport default function Home(props) {\n  console.log(props.episodes); // SSR\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Index\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/joao/Documents/_DEV/rocketseat/nlw/aulas/podcastrnext/src/pages/index.tsx"],"names":["Home","props","console","log","episodes"],"mappings":";;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAe,SAASA,IAAT,CAAcC,KAAd,EAAqB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB,EADkC,CACL;;AAE7B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;KANuBJ,I","sourcesContent":["// SPA (não usar quando as informações que serão obtidas com esta estratégia precisarem estar disponíveis assim que a página é exibida para o usuário; o Crawler não vai indexar isso) \n// SSR\n// SSG (utilizar quando deseja-se cacher a página no servidor- performance; ex.: 1 milhão de pessoas acessa a mesma página no mesmo dia => cachear site no servidor e por validade de 24 )\n\nimport { useEffect } from \"react\"\n\n// export default function Home() {\n//   useEffect( // SPA\n//     () => {\n//       fetch('http://localhost:3333/episodes')\n//         .then(response => response.json())\n//         .then(data => console.log(data))\n//     }, // o que fazer \n//     [] // quando; \"[]\" significa que a função vai ser executada assim que o componente for exibido em tela, uma única vez\n//   )\n\n//   return (\n//     <h1>Index</h1>\n//   )\n// }\n\nexport default function Home(props) {\n  console.log(props.episodes); // SSR\n\n  return (\n    <h1>Index</h1>\n  )\n}\n\nexport async function getServerSideProps() { // executa toda vez que alguém acessar a HOME (\"/\") da aplicação \n  const response = await fetch('http://localhost:3333/episodes');\n  const data = await response.json();\n\n  return {\n    props: { // o que é retornado aqui, é repassado para o componente function Home no argumento props\n      episodes: data,\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}